## [M1: point 1]
#  Explain following in here
#  
# This is a user defined variable that is used to specify the name of the
# module that will be built.
MODULE	 = hw4

## [M2: point 1]
#  Explain following in here
#
# This is a var used for Linux kernel module build systems.
# It is convention, indicating the object files to build
# as loadable kernel modules. "m" stands for module.
# 
# Here we apped the user var built as an object file to 
# the list of modules
obj-m += $(MODULE).o

## [M3: point 1]
#  Explain following in here
#
# user variable that reads to be the path to the kernel source
# code. If it is not defined, it will default to the path of the
# kernel source code for the currently running kernel.
KERNELDIR ?= /lib/modules/$(shell uname -r)/build

## [M4: point 1]
#  Explain following in here
#  
# Here we have a user defined variable that is the value of the 
# current working directory from the shell where the Makefile 
# is running
PWD := $(shell pwd)

## [M5: point 1]
#  Explain following in here
# 
# this makes the module the default target for the Makefile
all: $(MODULE)


## [M6: point 1]
#  Explain following in here
#
# wildcard matcher
# for every file that ends in .c, we will compile it into 
# an object file using the specified command
# 
# $< is the first prerequisite which is the source file "%.c"
# CC is the compiler which is likely gcc
# @ before echo suppresses the command from being printed
#
# the -c flag tells the compiler to output object files from the assemler 
# and not the run the linker
# $< is the prerequisite "%.c"
# $@ is the target of the Makefile rule, which are the "%.o" files
%.o: %.c
	@echo "  CC      $<"
	@$(CC) -c $< -o $@

## [M7: point 1]
#  Explain following in here
#
# Module is the target of the makefile rule
# MAKE invokes the make command
# -C is build object files from the assembler and 
# do not run the linker
# 
# KENELDIR is the path to the kernel source code discussed earlier
# M is the path to the current working directory
# modules is the target being built in the kernel source dir

$(MODULE):
	$(MAKE) -C $(KERNELDIR) M=$(PWD) modules

## [M8: point 1]
#  Explain following in here
#
# 
# Here we are removing the object files and other files that are
# generated by the kernel build system by running the clean target
# in the kernel source directory
clean:
	$(MAKE) -C $(KERNELDIR) M=$(PWD) clean
